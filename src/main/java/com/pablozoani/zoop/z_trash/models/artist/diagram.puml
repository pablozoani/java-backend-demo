@startuml

title ARTIST UML

skinparam monochrome true
skinparam shadowing false
skinparam defaultFontName Liberation Mono
skinparam defaultFontSize 10
skinparam defaultFontColor Black
skinparam ArrowFontColor Black
skinparam ArrowColor Grey
skinparam classAttributeIconSize 0
skinparam genericDisplay old
hide empty members

package com.pablo.models.artist {

    Artist *-- "1..*" Work

    class Exhibition {
    }
    Exhibition *-- "1..*" Work

    class Composer {
        -mainInstrument: String
    }
    Composer --|> Artist
    Composer ..|> Performer

    class Writer {
        -mainGenre: LiteraryGenre
    }
    Writer --|> Artist

    class Painter {
    }
    Painter --|> Artist

    class Sculptor {
    }
    Sculptor --|> Artist

    abstract class Artist<T extends Work> {
        #completeName: String
    }
    Artist ..|> Producer

    class MusicPiece {
        -duration: java.time.Duration
    }
    MusicPiece --|> Work
    MusicPiece ..|> Performable

    class Picture {
        -dimensions: javafx.geometry.Dimension2D
    }
    Picture --|> Work

    class Book {
        -genre: LiteraryGenre
    }
    Book --|> Work

    class Sculpture {
        -dimension3D: Dimension3D
    }
    Sculpture --|> Work

    class Dimension3D {
    }
    Dimension3D --+ Sculpture

    abstract class Work {
        #title: String
        #artistCompleteName: String
    }

    interface Producer<T> {
        +produce(work: T): boolean
    }

    interface Performer<T extends Performable> {
        +perform(T): void
    }

    interface Performable {
    }

    enum LiteraryGenre {
        FICTION
        NONFICTION
        DRAMA
        POETRY
    }
}
@enduml